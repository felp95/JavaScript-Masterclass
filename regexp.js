//Expressões regulares 

// . (ponto) - REPRESENTA QUALQUER CARACTERE

// \ (barra invertida) - É USADO PRA ESCAPAR UM CARACTERE

// ^ (acento circunflexo) - INICIA COM UM DETERMINADO CARACTERE

// $ (sifrao) - TERMINA COM UM DETERMINADO CARACTERE

// [abc] - ACEITE QUALQUER CARACTERE DENTRO DO GRUPO NESTE CASO A,B,C
// [^abc] - NAO ACEITA QUALQUER CARACTERE DENTRO DO GRUPO 
// [0-9] - ACEITA CARACTERES ENTRE 0 E 9
// [^0-9] - NAO ACEITA CARACTERES ENTRE 0 E 9

// {n} - QUANTIFICA UM NUMERO ESPECIFICO
// {n,} - QUANTIFICA UM NUMERO MINIMO
// {n,m} - QUANTIFICA UM NUMERO MINIMO E MAXIMO
// ? - ZERO OU UM
// * - ZERO OU MAIS
// + - UM OU MAIS

// METACARACTERES
// \w - REPRESENTA O CONJUNTO [a-zA-Z0-9_]
// \W - REPRESENTA O CONJUNTO [^a-zA-Z0-9_]
// \d - REPRESENTA O CONJUNTO [0-9]
// \D - REPRESENTA O CONJUNTO [^0-9]
// \s - REPRESENTA UM ESPAÇO EM BRANCO
// \S - REPRESENTA UM NÃO ESPAÇO EM BRANCO
// \n - REPRESENTA UMA QUEBRA DE LINHA
// \t - REPRESENTA UM TAB

// GRUPOS DE CAPTURA
// () - DETERMINA UM GRUPO DE CAPTURA PARA EXTRAIR VALORES DE UMA STRING

let regExp = /^(\w{4,})@([a-z]+)\.[a-z]{3}$/;

let result = regExp.exec("john@gmail.com");

console.log(result)